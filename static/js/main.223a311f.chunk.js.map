{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/FormValidator.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/CardDelete.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onDeleteCard","onCardDelButtonClick","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","src","link","alt","onClick","name","length","type","Spinner","Main","onEditAvatar","onEditProfile","onAddPlace","handleCardClick","cards","isLoading","user","style","backgroundImage","avatar","about","map","Footer","filler","ImagePopup","onClose","Object","keys","FormValidator","objSelectors","formElement","enableValidation","_setEventListeners","_inputList","Array","from","_formElement","querySelectorAll","_objSelectors","_buttonElement","querySelector","forEach","inputElement","addEventListener","_checkInputValidity","_toggleButtonState","validity","valid","_hideInputError","_showInputError","validationMessage","_disableSubmitButton","classList","add","setAttribute","_ableSubmitButton","remove","removeAttribute","_hasInvalidInput","input","errorMessage","_errorElement","id","textContent","clearFormFromErrorMessages","this","PopupWithForm","isOpen","title","children","ariaLabel","buttonTitle","onSubmit","submitButtonRef","handleInputsReset","currentValidatingForm","useRef","formValidate","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","current","ref","disabled","console","log","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","value","onChange","placeholder","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","inputRef","inputReset","AddPlacePopup","onAddCard","setLink","CardDelete","onCardDelete","api","options","_options","res","ok","json","Promise","reject","status","fetch","baseUrl","method","headers","then","_checkResponse","newProfileInfo","body","JSON","stringify","newCardData","cardId","avatarObject","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","selectedCard","setSelectedCard","cardForDelete","setCardForDelete","setCurrentUser","setIsLoading","getUserInfo","resCurrentUser","catch","err","closeAllPopups","submitButtonDisabling","setCards","getInitialCards","resInitialCards","finally","Provider","changeLikeCardStatus","newCard","tmpCard","newUserInfo","patchUserInfo","resUserInfo","newAvatarUrl","patchAvatar","resAvatarUrl","postNewCard","resNewCard","deleteOwnerCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.223a311f.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <header className=\"header page__header\">\n      <a href=\"#\" className=\"header__logo\" target=\"_self\"></a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({card, onCardClick, onCardLike, onDeleteCard, onCardDelButtonClick }) => {\n  const currentUser =  useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\n  );\n\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_active ' : ''}`\n  );\n\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }\n\n  const handleDeleteClick = () => {\n    onDeleteCard(); //открывает попап подтверждения\n    onCardDelButtonClick(card); //передает внещней функции (в App) экземпляр карточки которую нужно удалить.\n  }\n\n  return (\n    <div className=\"element\">\n      <img src={card.link} alt=\"some\" className=\"element__image\" onClick={handleClick} />\n      <h2 className=\"element__title\">{card.name}</h2>\n      <div className=\"element__like-counter\">{card.likes.length}</div>\n      <button type=\"button\" aria-label=\"Кнопка Нравится\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n      <button type=\"button\" aria-label=\"Кнопка удаления карточки\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n    </div>\n  );\n}\n\nexport default Card;\n\n//задать CSS селекторы element__delete-button_visible и element__delete-button_hidden","const Spinner = () => {\n  return (\n    <div className=\"loading\"></div>\n  );\n}\n\nexport default Spinner;","import { useContext } from 'react';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Main = ({onEditAvatar, onEditProfile, onAddPlace, onDeleteCard, onCardDelButtonClick, handleCardClick, cards, onCardLike, isLoading}) => {\n  const user = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile content__profile\">\n        <div className=\"profile__avatar\" onClick={onEditAvatar} style={{backgroundImage: `url(${user.avatar})`}}></div>\n        <div className=\"profile__layout\"> \n          <div className=\"profile__info\">\n            <h1 className=\"profile__full-name\">{user.name}</h1>\n            <p className=\"profile__role\">{user.about}</p>\n          </div>\n          <button type=\"button\" aria-label=\"Редактировать профиль\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\n        </div>\n        <button type=\"button\" aria-label=\"Добавить карточку\" className=\"profile__add-button\" onClick={onAddPlace}></button>\n      </section>\n      \n      <section className=\"elements content__elements\">    \n        {isLoading ? <Spinner /> : cards.map((card) => {\n          return (\n            <Card key={card._id} card={card} onCardClick={handleCardClick} onCardLike={onCardLike} onDeleteCard={onDeleteCard} onCardDelButtonClick={onCardDelButtonClick} />\n        )})}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = ({filler}) => {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">{filler}</p>\n    </footer>\n  );\n}\n\nexport default Footer;","const ImagePopup = ({card, onClose}) => {\n  const className = `popup popup_type_image ${Object.keys(card).length !== 0 ? 'popup_opened' : ''}`;\n  return (\n    <section className={className}>\n      <figure className=\"popup__image-container\">\n        <img src={card.link} alt=\"some\" className=\"popup__image\" />\n        <figcaption className=\"popup__image-caption\">{card.name}</figcaption>\n        <button type=\"button\" aria-label=\"Закрыть всплывающее окно\" className=\"popup__close-button\" onClick={onClose}></button>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","class FormValidator {\n  constructor(objSelectors, formElement) {\n    this._objSelectors = objSelectors;\n    this._formElement = formElement;\n  }\n\n  enableValidation = () => {\n    this._setEventListeners();\n  }\n\n  _setEventListeners = () => {\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._objSelectors['inputSelector']));\n    this._buttonElement = this._formElement.querySelector(this._objSelectors['submitButtonSelector']);\n    // this._toggleButtonState(); //когда он тут был нужен, теперь же он бесполезен ну пусть посидит за компанию. за выслугу лет, так сказать.\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      })\n    });\n  }\n  \n  _checkInputValidity = (inputElement) => {\n    if(!inputElement.validity.valid) {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    } else {\n      this._hideInputError(inputElement);\n    }\n  }\n\n  _disableSubmitButton = () => {\n    this._buttonElement.classList.add(this._objSelectors['inactiveButtonClass']);\n    this._buttonElement.setAttribute('disabled', true);\n  }\n\n  _ableSubmitButton = () => {\n    this._buttonElement.classList.remove(this._objSelectors['inactiveButtonClass']);\n    this._buttonElement.removeAttribute('disabled', false);\n  }\n\n  _toggleButtonState = () => {\n    if(this._hasInvalidInput()) {\n      this._disableSubmitButton();\n    } else {\n      this._ableSubmitButton();\n    }\n  }\n\n  _hasInvalidInput = () => {\n    return this._inputList.some((input) => {\n      return input.validity.valid === false;\n    });\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    this._errorElement = this._formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(this._objSelectors['inputErrorClass']);\n    this._errorElement.textContent = errorMessage;\n    this._errorElement.classList.add(this._objSelectors['errorClass']);\n  }\n\n  _hideInputError = (inputElement) => {\n    this._errorElement = this._formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(this._objSelectors['inputErrorClass']);\n    this._errorElement.textContent = '';\n    this._errorElement.classList.remove(this._objSelectors['errorClass']);\n  }\n\n  clearFormFromErrorMessages = () => { //данный публичный метод необходим для очистки формы от элементов ошибок. Он вызывается каждый раз когда закрывается форма редактирования или добавления. Без нее, единожды появившиеся элементы ошибок остаются навсегда. \n    this._disableSubmitButton(); //спасибо что обнаружили этот БАГ, надеюсь такое исправление Вас удовлетворит :) Необязательные замечания я обязательно исправлю, так как эти замечания весьма конструктивны и за это Вам тоже большое спасибо! \n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n}\n\nexport default FormValidator;","import { useRef } from 'react';\nimport FormValidator from '../utils/FormValidator';\n\nconst PopupWithForm = ({name, isOpen, title, children, ariaLabel, buttonTitle, onClose, onSubmit, submitButtonRef, handleInputsReset}) => {\n  const className = `popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`;\n\n  const objSelectors = {\n    formSelector: '.popup__edit-form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__save-button',\n    inactiveButtonClass: 'popup__save-button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error-element_visible'\n  };\n\n  const currentValidatingForm = useRef(null);\n  const formValidate = new FormValidator(objSelectors, currentValidatingForm.current);\n\n  if(isOpen) {\n    formValidate.enableValidation();\n  }\n\n  function handleClosePopup() {\n    console.log(name);\n    onClose();\n    handleInputsReset();\n    formValidate.clearFormFromErrorMessages();\n    if(name === 'delete') {\n      submitButtonRef.current.removeAttribute('disabled');\n      submitButtonRef.current.classList.remove('popup__save-button_disabled');\n    }\n  }\n\n  return (\n    <section className={className}>\n      <div className={`popup__container popup__container_type_${name}`}>\n        <form ref={currentValidatingForm} className={`popup__edit-form popup__edit-form_type_${name}`} name={name} onSubmit={onSubmit}>\n          <h2 className=\"popup__title\">{title}</h2>\n          <fieldset className=\"popup__info\">\n            {children}\n            <button ref={submitButtonRef} type=\"sumbit\" aria-label={ariaLabel} className={`popup__save-button ${name === 'delete' ? 'popup__save-button_type_delete' : 'popup__save-button_disabled'}`} disabled={name !== 'delete'}>{buttonTitle}</button>\n          </fieldset>\n        </form>\n        <button type=\"button\" aria-label=\"Закрыть всплывающее окно\" className=\"popup__close-button\" onClick={handleClosePopup} />\n      </div>\n    </section>\n  );\n};\n\nexport default PopupWithForm;","import { useState, useContext, useEffect, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({isOpen, onClose, onUpdateUser}) => {\n  const [name, setName] = useState(\"\"); \n  const [description, setDescription] = useState(\"\"); \n  const submitButtonRef = useRef();\n\n\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name: name, \n      about: description,\n    }, onClose, submitButtonRef);\n  }\n\n  return (\n    <PopupWithForm \n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"edit\" \n      title=\"Редактировать профиль\" \n      ariaLabel=\"Редактировать профиль\" \n      buttonTitle=\"Cохранить\"\n      submitButtonRef={submitButtonRef}\n      onSubmit={handleSubmit}\n      handleInputsReset={() => {}}\n    >\n      <input id=\"name-input\" type=\"text\" value={name} onChange={handleNameChange} placeholder=\"Ваше имя\" className=\"popup__input popup__input-name\" name=\"name\" required minLength=\"2\" maxLength=\"40\" />\n      <span className=\"popup__error-element name-input-error\"></span>\n      <input id=\"role-input\" type=\"text\" value={description} onChange={handleDescriptionChange} placeholder=\"Род вашей деятельности\" className=\"popup__input popup__input-role\" name=\"about\" required minLength=\"2\" maxLength=\"200\" />\n      <span className=\"popup__error-element role-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar }) => {\n  const inputRef = useRef();\n  const submitButtonRef = useRef();\n\n  function inputReset() {\n    inputRef.current.value = '';\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    }, onClose, submitButtonRef, inputReset);\n  }\n\n  return (\n    <PopupWithForm\n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"avatar\" \n      title=\"Обновить аватар\" \n      ariaLabel=\"Изменить аватар\" \n      buttonTitle=\"Сохранить\"\n      onSubmit={handleSubmit}\n      submitButtonRef={submitButtonRef}\n      handleInputsReset={inputReset}\n    >\n      <input ref={inputRef} id=\"url-input-avatar\" type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input_type_avatar popup__input-link\" name=\"avatar\" required />\n      <span className=\"popup__error-element url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useState, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst AddPlacePopup = ({isOpen, onClose, onAddCard}) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n  const submitButtonRef = useRef();\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleLinkChange(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleInputsReset() {\n    setName('');\n    setLink('');\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddCard({\n      name,\n      link,\n    }, onClose, handleInputsReset, submitButtonRef); //передал сюда как аргументы нужные методы, чтобы на внешнем уровне их использовать, при удачном запросе на сервер. \n  }\n\n  return (\n    <PopupWithForm \n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"new-card\" \n      title=\"Новое место\" \n      ariaLabel=\"Добавить новую карточку\" \n      buttonTitle=\"Сохранить\"\n      onSubmit={handleSubmit}\n      submitButtonRef={submitButtonRef}\n      handleInputsReset={handleInputsReset}\n    >\n      <input id=\"place-input\" value={name} onChange={handleNameChange} type=\"text\" placeholder=\"Название\" className=\"popup__input  popup__input-name\" name=\"name\" required minLength=\"2\" maxLength=\"30\" />\n      <span className=\"popup__error-element place-input-error\"></span>\n      <input id=\"url-input\" value={link} onChange={handleLinkChange} type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input-link\" name=\"link\" required />\n      <span className=\"popup__error-element url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst CardDelete = ({isOpen, onClose, onCardDelete, card}) => {\n  const submitButtonRef = useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete(card, onClose, submitButtonRef);\n  }\n\n  return (\n    <PopupWithForm \n      onClose={onClose}\n      isOpen={isOpen} \n      name=\"delete\" \n      title=\"Вы уверены?\" \n      ariaLabel=\"Удалить карточку с фотографией\" \n      buttonTitle=\"Да\" \n      submitButtonRef={submitButtonRef}\n      onSubmit={handleSubmit}\n      handleInputsReset={() => {}}\n    />\n  );\n}\n\nexport default CardDelete;","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  _checkResponse(res) {\n    if(res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка запроса: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._options.headers\n    })\n      .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._options.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._options.headers\n    })\n      .then(this._checkResponse);\n  }\n\n  patchUserInfo(newProfileInfo) {\n    return fetch(`${this._options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify(newProfileInfo)\n    })\n      .then(this._checkResponse);\n  }\n\n  postNewCard(newCardData) {\n    return fetch(`${this._options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._options.headers,\n      body: JSON.stringify(newCardData)\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteOwnerCard(cardId) {\n    return fetch(`${this._options.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._options.headers\n    }); \n  }\n\n  patchAvatar(avatarObject) {\n    return fetch(`${this._options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify(avatarObject)\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if(isLiked) { //case when the card is already liked: isLiked === true.\n      return fetch(`${this._options.baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._options.headers\n      })\n        .then(this._checkResponse);\n    } else { //case when the card isn't liked: isLiked === false.\n      return fetch(`${this._options.baseUrl}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this._options.headers\n      })\n        .then(this._checkResponse);\n    }\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26',\n  headers: {\n    authorization: 'c1029b6e-f14f-48d8-a0b9-3627c8971067',\n    'Content-Type': 'application/json'\n  }\n});","import { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDelete from './CardDelete';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cardForDelete, setCardForDelete] = useState({});\n  const [currentUser, setCurrentUser] = useState({name: '', about: '', avatar: '', _id: ''});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then((resCurrentUser) => {\n        setCurrentUser({\n          name: resCurrentUser.name,\n          about: resCurrentUser.about,\n          avatar: resCurrentUser.avatar,\n          _id: resCurrentUser._id,\n        });\n      })\n      .catch((err) => {\n        console.log(`Ошибка при первичном получении данных пользователя: ${err}`);\n      }); //тут не нужен finally, так как нет дефолтного поведения при запросе.\n  }, []);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard({});\n  }\n\n   const openEditAvatarPopup = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const openEditProfilePopup = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const openAddPlacePopup = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  const openCardDeletePopup = () => {\n    setIsDeleteCardPopupOpen(!isDeleteCardPopupOpen);\n  }\n\n  function submitButtonDisabling(submitButtonRef) {\n    submitButtonRef.current.setAttribute('disabled', true);\n    submitButtonRef.current.classList.add('popup__save-button_disabled');\n  }\n\n  const handleUpdateUser = (newUserInfo, onClose, submitButtonRef) => { //здесь и далее, я получаю методы изнутри компонента, вроде как это не запрещено чек-листом.\n    submitButtonRef.current.textContent = \"Сохранить...\"; //здесь и далее, я использую рефы, которые получаю как аргумент, чтобы создать UX-эффект при загрузке.\n    api.patchUserInfo(newUserInfo)\n      .then((resUserInfo) => {\n        setCurrentUser(resUserInfo);\n        onClose();\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке изменить данные пользователя: ${err}.`);\n      })\n      .finally(() => {\n        submitButtonRef.current.textContent = \"Сохранить\";\n        submitButtonDisabling(submitButtonRef);\n      });\n  }\n\n  const handleUpdateAvatar = (newAvatarUrl, onClose, submitButtonRef, inputReset) => {\n    submitButtonRef.current.textContent = \"Сохранить...\";\n    api.patchAvatar(newAvatarUrl)\n      .then((resAvatarUrl) => {\n        setCurrentUser(resAvatarUrl);\n        onClose();\n        inputReset();\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке изменить аватар пользователя: ${err}.`);\n      })\n      .finally(() => {\n        submitButtonRef.current.textContent = \"Сохранить\";\n        submitButtonDisabling(submitButtonRef);\n      })\n  }\n\n  //here starts cards adding code...\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getInitialCards()\n      .then((resInitialCards) => {\n        setCards(resInitialCards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка при первичном получении карточек: ${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []); //like componentDidMount - empty array\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => {\n      return like._id === currentUser._id;\n    });\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((cards) => {\n          return cards.map((tmpCard) => {\n            return tmpCard._id === card._id ? newCard : tmpCard;\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке удалении/установки лайка: ${err}.`);\n      }); //здесь не нужен finally, все по той же причине что и выше. \n  }\n\n  function handleCardDelete(card, onClose, submitButtonRef) { //тут \"тупанул\", полностью согласен с замечанием, благодарю!\n    submitButtonRef.current.textContent = \"Да...\";\n    api.deleteOwnerCard(card._id)\n      .then(() => {\n        setCards(cards.filter((tmpCard) => {\n          return tmpCard._id !== card._id; \n        }));\n        onClose();\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке удаления карточки: ${err}.`);\n      })\n      .finally(() => {\n        submitButtonRef.current.textContent = \"Да\";\n        submitButtonRef.current.removeAttribute('disabled');\n        submitButtonRef.current.classList.remove('popup__save-button_disabled');\n      });\n  }\n\n  const handleAddCard = (newCard, onClose, handleInputsReset, submitButtonRef) => {\n    submitButtonRef.current.textContent = \"Сохранить...\";\n    api.postNewCard(newCard)\n      .then((resNewCard) => {\n        setCards([resNewCard, ...cards]);\n        onClose();\n        handleInputsReset();\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке добавить новую карточку в начало списка: ${err}.`);\n      })\n      .finally(() => {\n        submitButtonRef.current.textContent = \"Сохранить\";\n        submitButtonDisabling(submitButtonRef);\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"wrapper\">\n        <div className=\"page\">\n          <Header />\n          <Main \n            onEditAvatar={openEditAvatarPopup} \n            onEditProfile={openEditProfilePopup}\n            onAddPlace={openAddPlacePopup}\n            onDeleteCard={openCardDeletePopup}\n            handleCardClick={setSelectedCard}\n            cards={cards}\n            onCardLike={handleCardLike}\n            // onCardDelete={handleCardDelete}\n            isLoading={isLoading}\n            onCardDelButtonClick={setCardForDelete}\n          />\n          <Footer filler=\"&copy; 2021 Mesto Russia\" />\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddCard} />\n\n          <CardDelete isOpen={isDeleteCardPopupOpen} onClose={closeAllPopups} onCardDelete={handleCardDelete} card={cardForDelete} />\n          {/* <PopupWithForm \n            onClose={closeAllPopups}\n            isOpen={false} \n            name=\"delete\" \n            title=\"Вы уверены?\" \n            ariaLabel=\"Удалить карточку с фотографией\" \n            buttonTitle=\"Да\" \n          /> */}\n\n          <ImagePopup \n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}