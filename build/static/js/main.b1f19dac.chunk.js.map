{"version":3,"sources":["components/Header.js","utils/Api.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","api","options","this","_options","res","ok","json","Promise","reject","status","fetch","baseUrl","method","headers","then","_checkResponse","newProfileInfo","body","JSON","stringify","newCardData","cardId","avatarObject","isLiked","authorization","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","like","cardLikeButtonClassName","src","link","alt","onClick","name","length","type","Main","onEditAvatar","onEditProfile","onAddPlace","handleCardClick","cards","user","style","backgroundImage","avatar","about","map","Footer","filler","PopupWithForm","isOpen","title","children","ariaLabel","buttonTitle","onClose","onSubmit","noValidate","ImagePopup","Object","keys","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","value","onChange","placeholder","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","onAddCard","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","getUserInfo","resCurrentUser","catch","err","console","log","closeAllPopups","setCards","getInitialCards","resInitialCards","Provider","changeLikeCardStatus","newCard","tmpCard","deleteOwnerCard","filter","newUserInfo","patchUserInfo","resUserInfo","newAvatarUrl","patchAvatar","resAvatarUrl","postNewCard","resNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1f19dac.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <header className=\"header page__header\">\n      <a href=\"#\" className=\"header__logo\" target=\"_self\"></a>\n    </header>\n  );\n}\n\nexport default Header;","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  _checkResponse(res) {\n    if(res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка запроса: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._options.headers\n    })\n      .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._options.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._options.headers\n    })\n      .then(this._checkResponse);\n  }\n\n  patchUserInfo(newProfileInfo) {\n    return fetch(`${this._options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify(newProfileInfo)\n    })\n      .then(this._checkResponse);\n  }\n\n  postNewCard(newCardData) {\n    return fetch(`${this._options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._options.headers,\n      body: JSON.stringify(newCardData)\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteOwnerCard(cardId) {\n    return fetch(`${this._options.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._options.headers\n    }); \n  }\n\n  patchAvatar(avatarObject) {\n    return fetch(`${this._options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify(avatarObject)\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if(isLiked) { //case when the card is already liked: isLiked === true.\n      return fetch(`${this._options.baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._options.headers\n      })\n        .then(this._checkResponse);\n    } else { //case when the card isn't liked: isLiked === false.\n      return fetch(`${this._options.baseUrl}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this._options.headers\n      })\n        .then(this._checkResponse);\n    }\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26',\n  headers: {\n    authorization: 'c1029b6e-f14f-48d8-a0b9-3627c8971067',\n    'Content-Type': 'application/json'\n  }\n});","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({card, onCardClick, onCardLike, onCardDelete}) => {\n  const currentUser =  useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\n  );\n\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_active ' : ''}`\n  );\n\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }\n\n  const handleDeleteClick = () => {\n    onCardDelete(card);\n  }\n\n  return (\n    <div className=\"element\">\n      <img src={card.link} alt=\"some\" className=\"element__image\" onClick={handleClick} />\n      <h2 className=\"element__title\">{card.name}</h2>\n      <div className=\"element__like-counter\">{card.likes.length}</div>\n      <button type=\"button\" aria-label=\"Кнопка Нравится\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n      <button type=\"button\" aria-label=\"Кнопка удаления карточки\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n    </div>\n  );\n}\n\nexport default Card;\n\n//задать CSS селекторы element__delete-button_visible и element__delete-button_hidden","import { useEffect, useState, useContext } from 'react';\nimport { api } from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Main = ({onEditAvatar, onEditProfile, onAddPlace, handleCardClick, cards, onCardLike, onCardDelete}) => {\n  const user = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile content__profile\">\n        <div className=\"profile__avatar\" onClick={onEditAvatar} style={{backgroundImage: `url(${user.avatar})`}}></div>\n        <div className=\"profile__layout\"> \n          <div className=\"profile__info\">\n            <h1 className=\"profile__full-name\">{user.name}</h1>\n            <p className=\"profile__role\">{user.about}</p>\n          </div>\n          <button type=\"button\" aria-label=\"Редактировать профиль\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\n        </div>\n        <button type=\"button\" aria-label=\"Добавить карточку\" className=\"profile__add-button\" onClick={onAddPlace}></button>\n      </section>\n\n      <section className=\"elements content__elements\">      \n        {cards.map((card) => {\n          return (\n            <Card key={card._id} card={card} onCardClick={handleCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\n        )})}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = ({filler}) => {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">{filler}</p>\n    </footer>\n  );\n}\n\nexport default Footer;","const PopupWithForm = ({name, isOpen, title, children, ariaLabel, buttonTitle, onClose, onSubmit}) => {\n  const className = `popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`;\n\n  return (\n    <section className={className}>\n      <div className={`popup__container popup__container_type_${name}`}>\n        <form className={`popup__edit-form popup__edit-form_type_${name}`} name={name} onSubmit={onSubmit} noValidate>\n          <h2 className=\"popup__title\">{title}</h2>\n          <fieldset className=\"popup__info\">\n            {children}\n            <button type=\"sumbit\" aria-label={ariaLabel} className={`popup__save-button ${name === 'delete' ? 'popup__save-button_type_delete' : ''}`}>{buttonTitle}</button>\n          </fieldset>\n        </form>\n        <button type=\"button\" aria-label=\"Закрыть всплывающее окно\" className=\"popup__close-button\" onClick={onClose} />\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","const ImagePopup = ({card, onClose}) => {\n  const className = `popup popup_type_image ${Object.keys(card).length !== 0 ? 'popup_opened' : ''}`;\n  return (\n    <section className={className}>\n      <figure className=\"popup__image-container\">\n        <img src={card.link} alt=\"some\" className=\"popup__image\" />\n        <figcaption className=\"popup__image-caption\">{card.name}</figcaption>\n        <button type=\"button\" aria-label=\"Закрыть всплывающее окно\" className=\"popup__close-button\" onClick={onClose}></button>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","import { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({isOpen, onClose, onUpdateUser}) => {\n  const [name, setName] = useState(\"\"); \n  const [description, setDescription] = useState(\"\"); \n\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name: name, \n      about: description,\n    });\n    onClose();\n  }\n\n  return (\n    <PopupWithForm \n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"edit\" \n      title=\"Редактировать профиль\" \n      ariaLabel=\"Редактировать профиль\" \n      buttonTitle=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input id=\"name-input\" type=\"text\" value={name} onChange={handleNameChange} placeholder=\"Ваше имя\" className=\"popup__input popup__input-name\" name=\"name\" required minLength=\"2\" maxLength=\"40\" />\n      <span className=\"popup__error-element name-input-error\"></span>\n      <input id=\"role-input\" type=\"text\" value={description} onChange={handleDescriptionChange} placeholder=\"Род вашей деятельности\" className=\"popup__input popup__input-role\" name=\"about\" required minLength=\"2\" maxLength=\"200\" />\n      <span className=\"popup__error-element role-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar }) => {\n  const inputRef = useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n    onClose();\n  }\n\n  return (\n    <PopupWithForm\n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"avatar\" \n      title=\"Обновить аватар\" \n      ariaLabel=\"Изменить аватар\" \n      buttonTitle=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input ref={inputRef} id=\"url-input-avatar\" type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input_type_avatar popup__input-link\" name=\"avatar\" required />\n      <span className=\"popup__error-element url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst AddPlacePopup = ({isOpen, onClose, onAddCard}) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleLinkChange(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddCard({\n      name,\n      link,\n    });\n    onClose();\n    handleInputsReset();\n  }\n\n  function handleInputsReset() {\n    setName('');\n    setLink('');\n  }\n\n  return (\n    <PopupWithForm \n      onClose={onClose} \n      isOpen={isOpen} \n      name=\"new-card\" \n      title=\"Новое место\" \n      ariaLabel=\"Добавить новую карточку\" \n      buttonTitle=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input id=\"place-input\" value={name} onChange={handleNameChange} type=\"text\" placeholder=\"Название\" className=\"popup__input  popup__input-name\" name=\"name\" required minLength=\"2\" maxLength=\"30\" />\n      <span className=\"popup__error-element place-input-error\"></span>\n      <input id=\"url-input\" value={link} onChange={handleLinkChange} type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input-link\" name=\"link\" required />\n      <span className=\"popup__error-element url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({name: '', about: '', avatar: '', _id: ''});\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then((resCurrentUser) => {\n        setCurrentUser({\n          name: resCurrentUser.name,\n          about: resCurrentUser.about,\n          avatar: resCurrentUser.avatar,\n          _id: resCurrentUser._id,\n        });\n\n      })\n      .catch((err) => {\n        console.log(`Ошибка при первичном получении данных пользователя: ${err}`);\n      });\n  }, []);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n   const openEditAvatarPopup = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const openEditProfilePopup = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const openAddPlacePopup = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  const handleUpdateUser = (newUserInfo) => {\n    api.patchUserInfo(newUserInfo)\n      .then((resUserInfo) => {\n        setCurrentUser(resUserInfo);\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке изменить данные пользователя: ${err}.`);\n      });\n  }\n\n  const handleUpdateAvatar = (newAvatarUrl) => {\n    api.patchAvatar(newAvatarUrl)\n      .then((resAvatarUrl) => {\n        setCurrentUser(resAvatarUrl);\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке изменить аватар пользователя: ${err}.`);\n      });\n  }\n\n  //here starts cards adding code...\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((resInitialCards) => {\n        setCards(resInitialCards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка при первичном получении карточек: ${err}`);\n      });\n  }, []); //like componentDidMount - empty array\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => {\n      return like._id === currentUser._id;\n    });\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((cards) => {\n          return cards.map((tmpCard) => {\n            return tmpCard._id === card._id ? newCard : tmpCard;\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке удалении/установки лайка: ${err}.`);\n      })\n  }\n\n  function handleCardDelete(card) {\n    api.deleteOwnerCard(card._id);\n    setCards(cards.filter((tmpCard) => {\n      return tmpCard._id !== card._id; \n    }));\n  }\n\n  const handleAddCard = (newCard) => {\n    api.postNewCard(newCard)\n      .then((resNewCard) => {\n        setCards([resNewCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log(`Ошибка при попытке добавить новую карточку в начало списка: ${err}.`);\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"wrapper\">\n        <div className=\"page\">\n          <Header />\n          <Main \n            onEditAvatar={openEditAvatarPopup} \n            onEditProfile={openEditProfilePopup}\n            onAddPlace={openAddPlacePopup}\n            handleCardClick={setSelectedCard}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer filler=\"&copy; 2021 Mesto Russia\" />\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddCard} />\n          {/* <PopupWithForm \n            onClose={closeAllPopups} \n            isOpen={isAddPlacePopupOpen} \n            name=\"new-card\" \n            title=\"Новое место\" \n            ariaLabel=\"Добавить новую карточку\" \n            buttonTitle=\"Сохранить\"\n          >\n              <input id=\"place-input\" type=\"text\" placeholder=\"Название\" className=\"popup__input  popup__input-name\" name=\"name\" required minLength=\"2\" maxLength=\"30\" />\n              <span className=\"popup__error-element place-input-error\"></span>\n              <input id=\"url-input\" type=\"url\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input-link\" name=\"link\" required />\n              <span className=\"popup__error-element url-input-error\"></span>\n          </PopupWithForm> */}\n\n          <PopupWithForm \n            onClose={closeAllPopups}\n            isOpen={false} \n            name=\"delete\" \n            title=\"Вы уверены?\" \n            ariaLabel=\"Удалить карточку с фотографией\" \n            buttonTitle=\"Да\" \n          />\n\n          <ImagePopup \n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}